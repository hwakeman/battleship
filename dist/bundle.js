(()=>{"use strict";class r{constructor(r,t){if(t<=0)throw new Error("Incorrect Length Error");if(""===r)throw new Error("Empty Name Error");if("string"!=typeof r)throw new Error("Type Error");if("number"!=typeof t)throw new Error("Type Error");this.name=r,this.length=t,this.hits=0}hit(){this.hits++}isSunk(){return this.length<=this.hits}}let t=new r("destroyer",5),o=new class{constructor(r,t){this.board=Array.from({length:r},(()=>Array(t).fill(""))),this.shipList=[]}place(t,o,e,h){if(!(t instanceof r)||"number"!=typeof o||o<=0||o%1!=0||"number"!=typeof e||e<=0||e%1!=0||"boolean"!=typeof h)throw new Error("Type Error");if(this.shipList.push(t),h){if(o+t.length>this.board[0].length)throw new Error("Ship Off Board Error");let r=this.board.length-e-1;for(let e=o;e<o+t.length;e++){if(""!==this.board[r][e])throw new Error("Ship Overlap Error");this.board[r][e]=t.name}}else{if(e-t.length>0)throw new Error("Ship Off Board Error");let r=this.board.length-e-1;for(let e=r;e>r-t.length;e--){if(""!==this.board[e][o])throw new Error("Ship Overlap Error");this.board[e][o]=t.name}}}receiveAttack(r,t){if("number"!=typeof r||r%1!=0||"number"!=typeof t||t%1!=0)throw new Error("Type Error");if(r>=this.board[0].length||t>=this.board.length)throw new Error("Attack Out Of Bounds Error");let o=this.board.length-t-1;if(""!==this.board[o][r]){const t=this.board[o][r];this.shipList.forEach((r=>{r.name===t&&r.hit()}))}this.board[o][r]="X"}allShipsSunk(){let r=!0;return this.shipList.forEach((t=>{t.isSunk()||(r=!1)})),r}}(10,10);o.place(t,3,4,!1),console.log(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RCxXQUFVcUIsR0FBa0IsTUFFbENBLENBQ1gsR0QxRTBCLEdBQUksSUFFbENuQixFQUFVUSxNQUFNVCxFQUFNLEVBQUcsR0FBRyxHQUU1QnFCLFFBQVFDLElBQUlyQixFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9tb2RlbHMvU2hpcC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvbW9kZWxzL0dhbWVib2FyZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBTaGlwIHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBsZW5ndGgpIHtcbiAgICAgICAgaWYobGVuZ3RoIDw9IDApIHRocm93IG5ldyBFcnJvcignSW5jb3JyZWN0IExlbmd0aCBFcnJvcicpXG4gICAgICAgIGlmKG5hbWUgPT09ICcnKSB0aHJvdyBuZXcgRXJyb3IoJ0VtcHR5IE5hbWUgRXJyb3InKVxuICAgICAgICBpZih0eXBlb2YgbmFtZSAhPT0gJ3N0cmluZycpIHRocm93IG5ldyBFcnJvcignVHlwZSBFcnJvcicpXG4gICAgICAgIGlmKHR5cGVvZiBsZW5ndGggIT09ICdudW1iZXInKSB0aHJvdyBuZXcgRXJyb3IoJ1R5cGUgRXJyb3InKVxuXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWVcbiAgICAgICAgdGhpcy5sZW5ndGggPSBsZW5ndGhcbiAgICAgICAgdGhpcy5oaXRzID0gMFxuICAgIH1cblxuICAgIGhpdCgpIHtcbiAgICAgICAgdGhpcy5oaXRzKytcbiAgICB9XG5cbiAgICBpc1N1bmsoKSB7XG4gICAgICAgIGlmKHRoaXMubGVuZ3RoIDw9IHRoaXMuaGl0cykgcmV0dXJuIHRydWVcbiAgICAgICAgZWxzZSByZXR1cm4gZmFsc2VcbiAgICB9XG5cblxufSIsImltcG9ydCBTaGlwIGZyb20gXCIuL21vZGVscy9TaGlwXCI7XG5pbXBvcnQgR2FtZWJvYXJkIGZyb20gXCIuL21vZGVscy9HYW1lYm9hcmRcIjtcblxubGV0IHNoaXAgPSBuZXcgU2hpcCgnZGVzdHJveWVyJywgNSlcbmxldCBnYW1lYm9hcmQgPSBuZXcgR2FtZWJvYXJkKDEwLCAxMClcblxuZ2FtZWJvYXJkLnBsYWNlKHNoaXAsIDMsIDQsIGZhbHNlKVxuXG5jb25zb2xlLmxvZyhnYW1lYm9hcmQpIiwiaW1wb3J0IFNoaXAgZnJvbSBcIi4vU2hpcFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lYm9hcmQge1xuICAgIGNvbnN0cnVjdG9yKHdpZHRoLCBoZWlnaHQpIHtcbiAgICAgICAgdGhpcy5ib2FyZCA9IEFycmF5LmZyb20oeyBsZW5ndGg6IHdpZHRoIH0sICgpID0+IEFycmF5KGhlaWdodCkuZmlsbCgnJykpO1xuICAgICAgICB0aGlzLnNoaXBMaXN0ID0gW11cbiAgICB9XG5cbiAgICBwbGFjZShzaGlwLCB4LCB5LCBpc0hvcml6b250YWwpIHtcbiAgICAgICAgaWYoXG4gICAgICAgICAgICAhKHNoaXAgaW5zdGFuY2VvZiBTaGlwKSAgfHxcbiAgICAgICAgICAgIHR5cGVvZiB4ICE9PSAnbnVtYmVyJyB8fCB4IDw9IDAgfHwgeCAlIDEgIT09IDAgfHxcbiAgICAgICAgICAgIHR5cGVvZiB5ICE9PSAnbnVtYmVyJyB8fCB5IDw9IDAgfHwgeSAlIDEgIT09IDAgfHxcbiAgICAgICAgICAgIHR5cGVvZiBpc0hvcml6b250YWwgIT09ICdib29sZWFuJ1xuICAgICAgICApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVHlwZSBFcnJvcicpXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNoaXBMaXN0LnB1c2goc2hpcClcbiAgICAgICAgaWYoaXNIb3Jpem9udGFsKSB7XG4gICAgICAgICAgICBpZigoeCArIHNoaXAubGVuZ3RoKSA+IHRoaXMuYm9hcmRbMF0ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTaGlwIE9mZiBCb2FyZCBFcnJvcicpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGxldCByZWFsWVZhbHVlID0gdGhpcy5ib2FyZC5sZW5ndGggLSB5IC0gMVxuICAgICAgICAgICAgZm9yKGxldCBpbmRleCA9IHg7IGluZGV4IDwgeCArIHNoaXAubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgaWYodGhpcy5ib2FyZFtyZWFsWVZhbHVlXVtpbmRleF0gIT09ICcnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignU2hpcCBPdmVybGFwIEVycm9yJylcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aGlzLmJvYXJkW3JlYWxZVmFsdWVdW2luZGV4XSA9IHNoaXAubmFtZVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYoKHkgLSBzaGlwLmxlbmd0aCkgPiAwKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTaGlwIE9mZiBCb2FyZCBFcnJvcicpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGxldCByZWFsWVZhbHVlID0gdGhpcy5ib2FyZC5sZW5ndGggLSB5IC0gMVxuICAgICAgICAgICAgZm9yKGxldCBpbmRleCA9IHJlYWxZVmFsdWU7IGluZGV4ID4gcmVhbFlWYWx1ZSAtIHNoaXAubGVuZ3RoOyBpbmRleC0tKSB7XG4gICAgICAgICAgICAgICAgaWYodGhpcy5ib2FyZFtpbmRleF1beF0gIT09ICcnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignU2hpcCBPdmVybGFwIEVycm9yJylcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aGlzLmJvYXJkW2luZGV4XVt4XSA9IHNoaXAubmFtZVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIHJlY2VpdmVBdHRhY2soeCwgeSkge1xuICAgICAgICBpZihcbiAgICAgICAgICAgIHR5cGVvZiB4ICE9PSAnbnVtYmVyJyB8fCB4ICUgMSAhPT0gMCB8fFxuICAgICAgICAgICAgdHlwZW9mIHkgIT09ICdudW1iZXInIHx8IHkgJSAxICE9PSAwXG4gICAgICAgICkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUeXBlIEVycm9yJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKHggPj0gdGhpcy5ib2FyZFswXS5sZW5ndGggfHwgeSA+PSB0aGlzLmJvYXJkLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdBdHRhY2sgT3V0IE9mIEJvdW5kcyBFcnJvcicpXG4gICAgICAgIH1cblxuICAgICAgICBsZXQgcmVhbFlWYWx1ZSA9IHRoaXMuYm9hcmQubGVuZ3RoIC0geSAtIDFcbiAgICAgICAgaWYodGhpcy5ib2FyZFtyZWFsWVZhbHVlXVt4XSAhPT0gJycpIHtcbiAgICAgICAgICAgIGNvbnN0IGhpdE5hbWUgPSB0aGlzLmJvYXJkW3JlYWxZVmFsdWVdW3hdXG4gICAgICAgICAgICB0aGlzLnNoaXBMaXN0LmZvckVhY2goKHNoaXApID0+IHtcbiAgICAgICAgICAgICAgICBpZihzaGlwLm5hbWUgPT09IGhpdE5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgc2hpcC5oaXQoKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5ib2FyZFtyZWFsWVZhbHVlXVt4XSA9ICdYJ1xuICAgIH1cblxuICAgIGFsbFNoaXBzU3VuaygpIHtcbiAgICAgICAgbGV0IGFyZUFsbFNoaXBzU3VuayA9IHRydWVcbiAgICAgICAgdGhpcy5zaGlwTGlzdC5mb3JFYWNoKChzaGlwKSA9PiB7XG4gICAgICAgICAgICBpZighc2hpcC5pc1N1bmsoKSkgYXJlQWxsU2hpcHNTdW5rID0gZmFsc2VcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIGFyZUFsbFNoaXBzU3Vua1xuICAgIH1cbn0iXSwibmFtZXMiOlsiU2hpcCIsImNvbnN0cnVjdG9yIiwibmFtZSIsImxlbmd0aCIsIkVycm9yIiwidGhpcyIsImhpdHMiLCJoaXQiLCJpc1N1bmsiLCJzaGlwIiwiZ2FtZWJvYXJkIiwid2lkdGgiLCJoZWlnaHQiLCJib2FyZCIsIkFycmF5IiwiZnJvbSIsImZpbGwiLCJzaGlwTGlzdCIsInBsYWNlIiwieCIsInkiLCJpc0hvcml6b250YWwiLCJwdXNoIiwicmVhbFlWYWx1ZSIsImluZGV4IiwicmVjZWl2ZUF0dGFjayIsImhpdE5hbWUiLCJmb3JFYWNoIiwiYWxsU2hpcHNTdW5rIiwiYXJlQWxsU2hpcHNTdW5rIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=