(()=>{"use strict";var n={780:(n,e,t)=>{t.d(e,{Z:()=>l});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"body {\n    margin: 0px;\n    height: 100vh;\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n\n    min-width: 950px;\n    height: 100vh;\n}\n\n.name-form-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 100vw;\n    height: 100vh;\n}\n\n.name-form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    width: 40%;\n    height: 40%;\n\n    background-color: #1c5727;\n    border-radius: 20px;\n\n    z-index: 2;\n}\n\n.name-form-background {\n    position: absolute;\n    width: 100vw;\n    height: 100vh;\n    filter: blur(3px);\n    z-index: -1;\n}\n\n.header {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgb(205, 119, 40);\n    color: white;\n    width: 100%;\n    min-height: 50px;\n    align-self: flex-end;\n\n    text-align: center;\n    font-size: 1.5rem;\n}\n\n.body {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n\n    position: relative;\n    width: 100%;\n\n    flex: 1;\n\n    background-color: gray;\n}\n\n.board-labels {\n    display: flex;\n    justify-content: center;\n}\n\n.boards {\n    width: min(70%, 1100px);\n\n    display: grid;\n    grid-template-rows: 1fr 10fr;\n    grid-template-columns: 1fr 1fr;\n    gap: 10px;\n    justify-items: center;\n    align-items: center;\n}\n\n.win-message {\n    text-align: center;\n}\n\n.footer {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgb(75, 75, 167);\n    color: white;\n    width: 100%;\n    min-height: 50px;\n    align-self: flex-end;\n\n    text-align: center;\n    font-size: 1.5rem;\n\n    order: 100;\n}\n\n.footer>div {\n    padding-left: 10px;\n}\n\n.footer-links {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\nimg {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    max-height: 40px;\n}\n\n.player-board,\n.computer-board {\n    width: 300px;\n    height: 300px;\n\n    border: 2px solid black;\n    border-spacing: 0;\n    border-collapse: collapse;\n}\n\n.player-board>*>*,\n.computer-board>*>* {\n    height: 25px;\n    width: 25px;\n    overflow: hidden;\n    white-space: nowrap;\n    border: 1px solid black;\n}\n\n.green {\n    background-color: green;\n}\n\n.red {\n    background-color: red;\n}\n\n.board-buttons {\n    display: flex;\n    justify-content: center;\n\n    padding-top: 5px;\n}\n\n.board-button {\n    background-color: coral;\n}","",{version:3,sources:["webpack://./src/app.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,8BAA8B;;IAE9B,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;;IAEhC,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;;IAEnB,UAAU;IACV,WAAW;;IAEX,yBAAyB;IACzB,mBAAmB;;IAEnB,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,iBAAiB;IACjB,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;;IAEvB,mCAAmC;IACnC,YAAY;IACZ,WAAW;IACX,gBAAgB;IAChB,oBAAoB;;IAEpB,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,6BAA6B;IAC7B,mBAAmB;;IAEnB,kBAAkB;IAClB,WAAW;;IAEX,OAAO;;IAEP,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,uBAAuB;;IAEvB,aAAa;IACb,4BAA4B;IAC5B,8BAA8B;IAC9B,SAAS;IACT,qBAAqB;IACrB,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;;IAEvB,kCAAkC;IAClC,YAAY;IACZ,WAAW;IACX,gBAAgB;IAChB,oBAAoB;;IAEpB,kBAAkB;IAClB,iBAAiB;;IAEjB,UAAU;AACd;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;;IAEvB,gBAAgB;AACpB;;AAEA;;IAEI,YAAY;IACZ,aAAa;;IAEb,uBAAuB;IACvB,iBAAiB;IACjB,yBAAyB;AAC7B;;AAEA;;IAEI,YAAY;IACZ,WAAW;IACX,gBAAgB;IAChB,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,uBAAuB;;IAEvB,gBAAgB;AACpB;;AAEA;IACI,uBAAuB;AAC3B",sourcesContent:["body {\n    margin: 0px;\n    height: 100vh;\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n\n    min-width: 950px;\n    height: 100vh;\n}\n\n.name-form-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 100vw;\n    height: 100vh;\n}\n\n.name-form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    width: 40%;\n    height: 40%;\n\n    background-color: #1c5727;\n    border-radius: 20px;\n\n    z-index: 2;\n}\n\n.name-form-background {\n    position: absolute;\n    width: 100vw;\n    height: 100vh;\n    filter: blur(3px);\n    z-index: -1;\n}\n\n.header {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgb(205, 119, 40);\n    color: white;\n    width: 100%;\n    min-height: 50px;\n    align-self: flex-end;\n\n    text-align: center;\n    font-size: 1.5rem;\n}\n\n.body {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n\n    position: relative;\n    width: 100%;\n\n    flex: 1;\n\n    background-color: gray;\n}\n\n.board-labels {\n    display: flex;\n    justify-content: center;\n}\n\n.boards {\n    width: min(70%, 1100px);\n\n    display: grid;\n    grid-template-rows: 1fr 10fr;\n    grid-template-columns: 1fr 1fr;\n    gap: 10px;\n    justify-items: center;\n    align-items: center;\n}\n\n.win-message {\n    text-align: center;\n}\n\n.footer {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgb(75, 75, 167);\n    color: white;\n    width: 100%;\n    min-height: 50px;\n    align-self: flex-end;\n\n    text-align: center;\n    font-size: 1.5rem;\n\n    order: 100;\n}\n\n.footer>div {\n    padding-left: 10px;\n}\n\n.footer-links {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\nimg {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    max-height: 40px;\n}\n\n.player-board,\n.computer-board {\n    width: 300px;\n    height: 300px;\n\n    border: 2px solid black;\n    border-spacing: 0;\n    border-collapse: collapse;\n}\n\n.player-board>*>*,\n.computer-board>*>* {\n    height: 25px;\n    width: 25px;\n    overflow: hidden;\n    white-space: nowrap;\n    border: 1px solid black;\n}\n\n.green {\n    background-color: green;\n}\n\n.red {\n    background-color: red;\n}\n\n.board-buttons {\n    display: flex;\n    justify-content: center;\n\n    padding-top: 5px;\n}\n\n.board-button {\n    background-color: coral;\n}"],sourceRoot:""}]);const l=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var l=0;l<this.length;l++){var c=this[l][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],l=0;l<n.length;l++){var c=n[l],s=r.base?c[0]+r.base:c[0],d=a[s]||0,u="".concat(s," ").concat(d);a[s]=d+1;var A=t(u),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)e[A].references++,e[A].updater(p);else{var f=o(p,r);r.byIndex=l,e.splice(l,0,{identifier:u,updater:f,references:1})}i.push(u)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var l=t(a[i]);e[l].references--}for(var c=r(n,o),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!n;)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),l=t(565),c=t.n(l),s=t(216),d=t.n(s),u=t(589),A=t.n(u),p=t(780),f={};function m(n,e,t){var r=document.createElement("div");r.classList.add("body");var o=document.createElement("div");o.classList.add("win-message"),o.innerHTML="Welcome to Battleship ".concat(t,"!");var a=document.createElement("div");a.classList.add("player-label"),a.classList.add("board-labels"),a.innerHTML="Player Board";var i=document.createElement("div");i.classList.add("computer-label"),i.classList.add("board-labels"),i.innerHTML="Computer Board";var l=document.createElement("div");return l.classList.add("boards"),l.appendChild(a),l.appendChild(i),l.appendChild(function(n){var e=document.createElement("table");e.classList.add("player-board");for(var t=0;t<10;t+=1){for(var r=document.createElement("tr"),o=0;o<10;o+=1){var a=document.createElement("td");"X"===n[t][o]?a.innerHTML="💦":"O"===n[t][o]?a.innerHTML="💥":""!==n[t][o]&&(a.innerHTML="🛳"),r.appendChild(a)}e.appendChild(r)}return e}(n)),l.appendChild(function(n){var e=document.createElement("table");e.classList.add("computer-board");for(var t=0;t<10;t+=1){for(var r=document.createElement("tr"),o=0;o<10;o+=1){var a=document.createElement("td");"X"===n[t][o]&&(a.innerHTML="💦"),"O"===n[t][o]&&(a.innerHTML="💥"),r.appendChild(a)}e.appendChild(r)}return e}(e)),r.appendChild(o),r.appendChild(l),r.appendChild(function(){var n=document.createElement("div");n.classList.add("board-buttons");var e=document.createElement("button");e.classList.add("board-button"),e.classList.add("rotate-button"),e.innerHTML="Rotate";var t=document.createElement("button");return t.classList.add("board-button"),t.classList.add("reset-button"),t.innerHTML="Reset game",n.appendChild(e),n.appendChild(t),n}()),r}function h(){var n=document.createElement("div");return n.classList.add("header"),n.innerHTML="Battleship",n}f.styleTagTransform=A(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;const y=t.p+"3524c849ab38de4be923.png";function b(){var n=document.createElement("div");n.classList.add("footer");var e=document.createElement("div");return e.classList.add("footer-text"),e.innerHTML="Created by Harley Wakeman",n.appendChild(e),n.appendChild(function(){var n=document.createElement("div");n.classList.add("footer-links");var e=document.createElement("a");e.href="https://github.com/hwakeman/battleship";var t=document.createElement("img");return t.src=y,e.appendChild(t),n.appendChild(e),n}()),n}function v(n){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},v(n)}function B(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,g(r.key),r)}}function g(n){var e=function(n,e){if("object"!=v(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=v(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==v(e)?e:String(e)}var C=function(){function n(e,t){if(function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),t<=0)throw new Error("Incorrect Length Error");if(""===e)throw new Error("Empty Name Error");if("string"!=typeof e)throw new Error("Type Error");if("number"!=typeof t)throw new Error("Type Error");this.name=e,this.length=t,this.hits=0}var e,t;return e=n,(t=[{key:"hit",value:function(){this.hits+=1}},{key:"isSunk",value:function(){return this.length<=this.hits}}])&&B(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();function E(n){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},E(n)}function I(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,w(r.key),r)}}function w(n){var e=function(n,e){if("object"!=E(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=E(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==E(e)?e:String(e)}var x=function(){function n(e,t){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.board=Array.from({length:e},(function(){return Array(t).fill("")})),this.shipList=[]}var e,t;return e=n,(t=[{key:"place",value:function(n,e,t,r){if(!(n instanceof C)||"number"!=typeof e||e<0||e%1!=0||"number"!=typeof t||t<0||t%1!=0||"boolean"!=typeof r)throw new Error("Type Error");var o=this.board.length-t-1;if(r){if(e+n.length>this.board[0].length)throw new Error("Ship Off Board Error");for(var a=e;a<e+n.length;a+=1)if(""!==this.board[o][a])throw new Error("Ship Overlap Error");for(var i=e;i<e+n.length;i+=1)this.board[o][i]=n.name}else{if(t+n.length>10)throw new Error("Ship Off Board Error");for(var l=o;l>o-n.length;l-=1)if(""!==this.board[l][e])throw new Error("Ship Overlap Error");for(var c=o;c>o-n.length;c-=1)this.board[c][e]=n.name}this.shipList.push(n)}},{key:"receiveAttack",value:function(n,e){var t=this;if("number"!=typeof n||n%1!=0||"number"!=typeof e||e%1!=0)throw new Error("Type Error");if(n>=this.board[0].length||e>=this.board.length)throw new Error("Attack Out Of Bounds Error");var r=this.board.length-e-1;if("X"===this.board[r][n]||"O"===this.board[r][n])throw new Error("Attack Repeat Error");if(""===this.board[r][n])this.board[r][n]="X";else{var o=this.board[r][n];this.shipList.forEach((function(e){e.name===o&&(e.hit(),t.board[r][n]="O")}))}}},{key:"allShipsSunk",value:function(){var n=!0;return this.shipList.forEach((function(e){e.isSunk()||(n=!1)})),n}}])&&I(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();function k(n){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},k(n)}function L(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,S(r.key),r)}}function S(n){var e=function(n,e){if("object"!=k(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==k(e)?e:String(e)}var j=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.name=e,this.playerBoard=new x(10,10),this.enemyPlayer=null}var e,t,r;return e=n,t=[{key:"setEnemyPlayer",value:function(e){if(!(e instanceof n))throw new Error("Type Error");this.enemyPlayer=e}},{key:"playRandomMove",value:function(){var e=this.enemyPlayer.playerBoard,t=n.getRandomInt(0,e.board[0].length),r=n.getRandomInt(0,e.board.length),o=e.board.length-r-1;"X"!==e.board[o][t]&&"O"!==e.board[o][t]?e.receiveAttack(t,r):this.playRandomMove()}},{key:"placeShipRandomly",value:function(e){try{this.playerBoard.place(e,n.getRandomInt(0,this.playerBoard.board[0].length),n.getRandomInt(0,this.playerBoard.board.length),Math.random()<.5)}catch(n){this.placeShipRandomly(e)}}}],r=[{key:"getRandomInt",value:function(n,e){return Math.floor(Math.random()*(e-n))+n}}],t&&L(e.prototype,t),r&&L(e,r),Object.defineProperty(e,"prototype",{writable:!1}),n}(),T=new Array(10).fill("").map((function(){return new Array(10).fill("")})),M="Player",P=[new C("carrier",5),new C("battleship",4),new C("cruiser",3),new C("submarine",3),new C("destroyer",2)],H=[new C("carrier",5),new C("battleship",4),new C("cruiser",3),new C("submarine",3),new C("destroyer",2)],O=0;document.getElementById("content").appendChild(h()),document.getElementById("content").appendChild(m(T,T,M)),document.getElementById("content").appendChild(b()),document.getElementById("name-form").appendChild(function(){var n=document.createElement("div");n.classList.add("name-form-container");var e=document.createElement("form");e.classList.add("name-form"),e.onsubmit=function(){event.preventDefault(),n.style.display="none"};var t=document.createElement("input");t.classList.add("name-input"),t.placeholder="Name:",e.appendChild(t);var r=document.createElement("button");r.classList.add("submit-button"),r.innerHTML="Submit",e.appendChild(r),n.appendChild(e);var o=document.createElement("div");return o.classList.add("name-form-background"),n.appendChild(o),n}());var N,R,W=document.getElementsByClassName("submit-button")[0],Y=document.getElementsByClassName("name-input")[0];W.addEventListener("click",(function(){""===(M=Y.value)&&(M="Player"),N=new j(M),R=new j("computer"),N.setEnemyPlayer(R),R.setEnemyPlayer(N),document.getElementsByClassName("win-message")[0].innerHTML="Welcome to Battleship ".concat(M,"!")}));var X=!0;!function n(){for(var e=document.querySelectorAll(".player-board tr td"),t=[],r=0;r<10;r+=1){t[r]=[];for(var o=0;o<10;o+=1)t[r][o]=e[10*r+o]}for(var a=function(){var n=Math.floor(i/10),e=i%10;t[n][e].addEventListener("click",(function(){return l(n,e)})),t[n][e].addEventListener("mouseenter",(function(){return c(n,e)})),t[n][e].addEventListener("mouseout",(function(){return s()}))},i=0;i<e.length;i+=1)a();var l=function(e,t){N.playerBoard.place(P[O],t,Math.abs(e-9),X),R.placeShipRandomly(H[O]),O+=1,document.getElementsByClassName("body")[0].innerHTML="",document.getElementsByClassName("body")[0].appendChild(m(N.playerBoard.board,R.playerBoard.board,M)),n()},c=function(n,e){if(X)for(var r=e;r<e+P[O].length;r+=1)t[n][r].classList.add("green");else for(var o=n;o>n-P[O].length;o-=1)t[o][e].classList.add("green")},s=function(){for(var n=0;n<10;n+=1)for(var e=0;e<10;e+=1)t[n][e].classList.remove("green")};document.getElementsByClassName("rotate-button")[0].addEventListener("click",(function(){X=!X})),document.getElementsByClassName("reset-button")[0].addEventListener("click",(function(){document.getElementById("content").innerHTML="",document.getElementById("content").appendChild(h()),document.getElementById("content").appendChild(m(T,T,M)),document.getElementById("content").appendChild(b()),n(),O=0,X=!0,N.playerBoard=new x(10,10),R.playerBoard=new x(10,10),P=[new C("carrier",5),new C("battleship",4),new C("cruiser",3),new C("submarine",3),new C("destroyer",2)],H=[new C("carrier",5),new C("battleship",4),new C("cruiser",3),new C("submarine",3),new C("destroyer",2)]})),5===O&&function(){for(var e=document.querySelectorAll(".computer-board tr td"),t=[],r=0;r<10;r+=1){t[r]=[];for(var o=0;o<10;o+=1)t[r][o]=e[10*r+o]}for(var a=function(){var n=Math.floor(i/10),e=i%10;t[n][e].addEventListener("click",(function(){return l(n,e)})),t[n][e].addEventListener("mouseenter",(function(){return c(n,e)})),t[n][e].addEventListener("mouseout",(function(){return s()}))},i=0;i<e.length;i+=1)a();var l=function(e,t){try{if(R.playerBoard.receiveAttack(t,Math.abs(e-9)),R.playRandomMove(),document.getElementsByClassName("body")[0].innerHTML="",document.getElementsByClassName("body")[0].appendChild(m(N.playerBoard.board,R.playerBoard.board,M)),n(),R.playerBoard.allShipsSunk()||N.playerBoard.allShipsSunk()){document.getElementsByClassName("body")[0].innerHTML="",document.getElementsByClassName("body")[0].appendChild(m(N.playerBoard.board,R.playerBoard.board,M));var r=document.getElementsByClassName("win-message")[0];R.playerBoard.allShipsSunk()&&N.playerBoard.allShipsSunk()?r.innerHTML="Tie!":R.playerBoard.allShipsSunk()?r.innerHTML="".concat(M," wins!"):r.innerHTML="Computer wins!",n()}}catch(n){console.log(n.message)}},c=function(n,e){t[n][e].classList.add("red")},s=function(){for(var n=0;n<10;n+=1)for(var e=0;e<10;e+=1)t[n][e].classList.remove("red")}}()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,